{"ast":null,"code":"import faker from 'faker';\nimport sample from 'lodash/sample'; // utils\n\nimport { mockImgParkinglot } from '../utils/mockImages';\nconst PARKINGLOT_NAME = ['Long Beach, California', 'Denver, Colorado', 'Honolulu, Hawaii', 'Moscow, Idaho', 'Iowa City, Iowa', 'Beverly, Massachusetts', 'Detroit, Michigan', 'Philadelphia, Mississippi', 'Columbus, Nebraska'];\nconst PARKINGLOT_COLOR = ['#00AB55', '#000000', '#FFFFFF', '#FFC0CB', '#FF4842', '#1890FF', '#94D82D', '#FFC107'];\nconst parkinglots = [...Array(8)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: faker.datatype.uuid(),\n    cover: mockImgParkinglot(setIndex),\n    name: PARKINGLOT_NAME[index],\n    price: faker.datatype.number({\n      min: 4,\n      max: 99,\n      precision: 0.01\n    }),\n    priceSale: setIndex % 3 ? null : faker.datatype.number({\n      min: 19,\n      max: 29,\n      precision: 0.01\n    }),\n    colors: setIndex === 1 && PARKINGLOT_COLOR.slice(0, 1) || setIndex === 2 && PARKINGLOT_COLOR.slice(0, 2) || setIndex === 3 && PARKINGLOT_COLOR.slice(0, 3) || setIndex === 4 && PARKINGLOT_COLOR.slice(0, 4) || setIndex === 5 && PARKINGLOT_COLOR.slice(0, 5) || setIndex === 6 && PARKINGLOT_COLOR.slice(0, 6) || PARKINGLOT_COLOR,\n    status: sample(['sale', 'new', '', ''])\n  };\n});","map":{"version":3,"sources":["C:/Users/woojo/source/repos/material-kit-react/frontend/src/_mocks_/parkinglots.js"],"names":["faker","sample","mockImgParkinglot","PARKINGLOT_NAME","PARKINGLOT_COLOR","parkinglots","Array","map","_","index","setIndex","id","datatype","uuid","cover","name","price","number","min","max","precision","priceSale","colors","slice","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,MAAMC,eAAe,GAAG,CACtB,wBADsB,EAEtB,kBAFsB,EAGtB,kBAHsB,EAItB,eAJsB,EAKtB,iBALsB,EAMtB,wBANsB,EAOtB,mBAPsB,EAQtB,2BARsB,EAStB,oBATsB,CAAxB;AAYA,MAAMC,gBAAgB,GAAG,CACvB,SADuB,EAEvB,SAFuB,EAGvB,SAHuB,EAIvB,SAJuB,EAKvB,SALuB,EAMvB,SANuB,EAOvB,SAPuB,EAQvB,SARuB,CAAzB;AAWA,MAAMC,WAAW,GAAG,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAClD,QAAMC,QAAQ,GAAGD,KAAK,GAAG,CAAzB;AAEA,SAAO;AACLE,IAAAA,EAAE,EAAEX,KAAK,CAACY,QAAN,CAAeC,IAAf,EADC;AAELC,IAAAA,KAAK,EAAEZ,iBAAiB,CAACQ,QAAD,CAFnB;AAGLK,IAAAA,IAAI,EAAEZ,eAAe,CAACM,KAAD,CAHhB;AAILO,IAAAA,KAAK,EAAEhB,KAAK,CAACY,QAAN,CAAeK,MAAf,CAAsB;AAC3BC,MAAAA,GAAG,EAAE,CADsB;AAE3BC,MAAAA,GAAG,EAAE,EAFsB;AAG3BC,MAAAA,SAAS,EAAE;AAHgB,KAAtB,CAJF;AASLC,IAAAA,SAAS,EACPX,QAAQ,GAAG,CAAX,GACI,IADJ,GAEIV,KAAK,CAACY,QAAN,CAAeK,MAAf,CAAsB;AACpBC,MAAAA,GAAG,EAAE,EADe;AAEpBC,MAAAA,GAAG,EAAE,EAFe;AAGpBC,MAAAA,SAAS,EAAE;AAHS,KAAtB,CAZD;AAiBLE,IAAAA,MAAM,EACHZ,QAAQ,KAAK,CAAb,IAAkBN,gBAAgB,CAACmB,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAnB,IACCb,QAAQ,KAAK,CAAb,IAAkBN,gBAAgB,CAACmB,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CADnB,IAECb,QAAQ,KAAK,CAAb,IAAkBN,gBAAgB,CAACmB,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAFnB,IAGCb,QAAQ,KAAK,CAAb,IAAkBN,gBAAgB,CAACmB,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAHnB,IAICb,QAAQ,KAAK,CAAb,IAAkBN,gBAAgB,CAACmB,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAJnB,IAKCb,QAAQ,KAAK,CAAb,IAAkBN,gBAAgB,CAACmB,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CALnB,IAMAnB,gBAxBG;AAyBLoB,IAAAA,MAAM,EAAEvB,MAAM,CAAC,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAhB,EAAoB,EAApB,CAAD;AAzBT,GAAP;AA2BD,CA9BmB,CAApB","sourcesContent":["import faker from 'faker';\r\nimport sample from 'lodash/sample';\r\n// utils\r\nimport { mockImgParkinglot } from '../utils/mockImages';\r\n\r\nconst PARKINGLOT_NAME = [\r\n  'Long Beach, California',\r\n  'Denver, Colorado',\r\n  'Honolulu, Hawaii',\r\n  'Moscow, Idaho',\r\n  'Iowa City, Iowa',\r\n  'Beverly, Massachusetts',\r\n  'Detroit, Michigan',\r\n  'Philadelphia, Mississippi',\r\n  'Columbus, Nebraska'\r\n];\r\n\r\nconst PARKINGLOT_COLOR = [\r\n  '#00AB55',\r\n  '#000000',\r\n  '#FFFFFF',\r\n  '#FFC0CB',\r\n  '#FF4842',\r\n  '#1890FF',\r\n  '#94D82D',\r\n  '#FFC107'\r\n];\r\n\r\nconst parkinglots = [...Array(8)].map((_, index) => {\r\n  const setIndex = index + 1;\r\n\r\n  return {\r\n    id: faker.datatype.uuid(),\r\n    cover: mockImgParkinglot(setIndex),\r\n    name: PARKINGLOT_NAME[index],\r\n    price: faker.datatype.number({\r\n      min: 4,\r\n      max: 99,\r\n      precision: 0.01\r\n    }),\r\n    priceSale:\r\n      setIndex % 3\r\n        ? null\r\n        : faker.datatype.number({\r\n            min: 19,\r\n            max: 29,\r\n            precision: 0.01\r\n          }),\r\n    colors:\r\n      (setIndex === 1 && PARKINGLOT_COLOR.slice(0, 1)) ||\r\n      (setIndex === 2 && PARKINGLOT_COLOR.slice(0, 2)) ||\r\n      (setIndex === 3 && PARKINGLOT_COLOR.slice(0, 3)) ||\r\n      (setIndex === 4 && PARKINGLOT_COLOR.slice(0, 4)) ||\r\n      (setIndex === 5 && PARKINGLOT_COLOR.slice(0, 5)) ||\r\n      (setIndex === 6 && PARKINGLOT_COLOR.slice(0, 6)) ||\r\n      PARKINGLOT_COLOR,\r\n    status: sample(['sale', 'new', '', ''])\r\n  };\r\n});\r\n"]},"metadata":{},"sourceType":"module"}