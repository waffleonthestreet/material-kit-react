{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woojo\\\\source\\\\repos\\\\material-kit-react\\\\frontend\\\\src\\\\theme\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react'; // material\n\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider, createTheme, StyledEngineProvider } from '@material-ui/core/styles'; //\n\nimport shape from './shape';\nimport palette from './palette';\nimport typography from './typography';\nimport GlobalStyles from './globalStyles';\nimport componentsOverride from './overrides';\nimport shadows, { customShadows } from './shadows'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nThemeConfig.propTypes = {\n  children: PropTypes.node\n};\nexport default function ThemeConfig({\n  children\n}) {\n  _s();\n\n  const themeOptions = useMemo(() => ({\n    palette,\n    shape,\n    typography,\n    shadows,\n    customShadows\n  }), []);\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeConfig, \"e1c3NSK3Id70B3MWDy214U2n2ec=\");\n\n_c = ThemeConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeConfig\");","map":{"version":3,"sources":["C:/Users/woojo/source/repos/material-kit-react/frontend/src/theme/index.js"],"names":["PropTypes","useMemo","CssBaseline","ThemeProvider","createTheme","StyledEngineProvider","shape","palette","typography","GlobalStyles","componentsOverride","shadows","customShadows","ThemeConfig","propTypes","children","node","themeOptions","theme","components"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,oBAArC,QAAiE,0BAAjE,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,aAA/B;AACA,OAAOC,OAAP,IAAkBC,aAAlB,QAAuC,WAAvC,C,CAEA;;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACtBC,EAAAA,QAAQ,EAAEf,SAAS,CAACgB;AADE,CAAxB;AAIA,eAAe,SAASH,WAAT,CAAqB;AAAEE,EAAAA;AAAF,CAArB,EAAmC;AAAA;;AAChD,QAAME,YAAY,GAAGhB,OAAO,CAC1B,OAAO;AACLM,IAAAA,OADK;AAELD,IAAAA,KAFK;AAGLE,IAAAA,UAHK;AAILG,IAAAA,OAJK;AAKLC,IAAAA;AALK,GAAP,CAD0B,EAQ1B,EAR0B,CAA5B;AAWA,QAAMM,KAAK,GAAGd,WAAW,CAACa,YAAD,CAAzB;AACAC,EAAAA,KAAK,CAACC,UAAN,GAAmBT,kBAAkB,CAACQ,KAAD,CAArC;AAEA,sBACE,QAAC,oBAAD;AAAsB,IAAA,WAAW,MAAjC;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA,KAAtB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGH,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAxBuBF,W;;KAAAA,W","sourcesContent":["import PropTypes from 'prop-types';\nimport { useMemo } from 'react';\n// material\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider, createTheme, StyledEngineProvider } from '@material-ui/core/styles';\n//\nimport shape from './shape';\nimport palette from './palette';\nimport typography from './typography';\nimport GlobalStyles from './globalStyles';\nimport componentsOverride from './overrides';\nimport shadows, { customShadows } from './shadows';\n\n// ----------------------------------------------------------------------\n\nThemeConfig.propTypes = {\n  children: PropTypes.node\n};\n\nexport default function ThemeConfig({ children }) {\n  const themeOptions = useMemo(\n    () => ({\n      palette,\n      shape,\n      typography,\n      shadows,\n      customShadows\n    }),\n    []\n  );\n\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <GlobalStyles />\n        {children}\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}